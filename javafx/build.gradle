plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.game'
version = '1.0.0'
sourceCompatibility = '21'

repositories {
    mavenCentral()
    maven { url 'https://repo.graalvm.org/native' }
}

dependencies {
    // JavaFX
    implementation 'org.openjfx:javafx-controls:21'
    implementation 'org.openjfx:javafx-web:21'
    implementation 'org.openjfx:javafx-fxml:21'
    
    // Database
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    
    // JavaFX for testing
    testImplementation 'org.openjfx:javafx-controls:21'
    testImplementation 'org.openjfx:javafx-web:21'
    testImplementation 'org.openjfx:javafx-fxml:21'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.web', 'javafx.fxml']
}

application {
    mainClass = 'com.game.GameApplication'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// JaCoCo configuration
jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/module-info.class',
                '**/GameApplication.class'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.20
            }
        }
        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.10
            }
        }
        rule {
            element = 'CLASS'
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.30
            }
        }
    }
    
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/module-info.class',
                '**/GameApplication.class',
                '**/MainWindow.class',
                '**/CanvasWindow.class',
                '**/WebViewBridge.class',
                '**/Renderer.class',
                '**/GridHighlightSystem.class',
                '**/GameLoop.class',
                '**/GameEngine.class',
                '**/EntityConfig.class'
            ])
        }))
    }
}

// Checkstyle configuration
checkstyle {
    toolVersion = '10.12.5'
    configFile = file('checkstyle.xml')
    configProperties = [
        'suppressionFile': file('suppressions.xml')
    ]
    maxWarnings = 0
}

// Native image configuration removed - focusing on JVM performance

// Development profile
if (project.hasProperty('profile') && project.profile == 'dev') {
    run {
        jvmArgs = [
            '-Dorg.slf4j.simpleLogger.defaultLogLevel=debug',
            '-Dcom.sun.management.jmxremote',
            '-Djava.vm.options=-Xmx2g -XX:+UseG1GC'
        ]
    }
} 